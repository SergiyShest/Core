@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using BlazorServerSignalRApp.Data
@inject WeatherForecastService ForecastService
@inject DAL.UsersService UsersService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{  
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>FirstName. (C)</th>
                <th>LastName. (F)</th>
                <th>Phone</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Phone</td>
                </tr>
            }
        </tbody>

    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    private List<DAL.User> users;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        var us = new DAL.UsersService();

        users = us.GetUsers();
    }


  
}
